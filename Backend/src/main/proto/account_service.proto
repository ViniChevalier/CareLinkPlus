syntax = "proto3";

package carelink.account;

// Java package options
option java_multiple_files = true;
option java_package = "com.carelink.grpc.account";
option java_outer_classname = "AccountProto";

// Service responsible for user account management: registration, login, profile
service AccountService {

  // Registers a new user in the system
  rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);

  // Authenticates a user and provides a JWT token
  rpc LoginUser (LoginRequest) returns (LoginResponse);

  // Retrieves user profile details
  rpc GetUserProfile (UserProfileRequest) returns (UserProfileResponse);

  // User requests a password reset link
  rpc RequestPasswordReset (RequestPasswordResetRequest) returns (RequestPasswordResetResponse);

  // Admin resets a user's password directly
  rpc AdminResetPassword (AdminResetPasswordRequest) returns (AdminResetPasswordResponse);
}

// Request message to register a new user
message RegisterUserRequest {
  string user_id = 1;        // Unique user ID (generated client or server-side)
  string username = 2;       // Chosen username
  string password = 3;       // User's password (should be hashed on server side)
  string full_name = 4;      // Full name of user
  string email = 5;          // Contact email
  string phone = 6;          // Contact phone number
  string role = 7;           // User role: patient, doctor, admin, etc.
}

// Response for RegisterUser RPC
message RegisterUserResponse {
  bool success = 1;          // Indicates if registration was successful
  string message = 2;        // Optional message (e.g. error reason)
}

// Request for user login
message LoginRequest {
  string username = 1;       // Username
  string password = 2;       // Password
}

// Response for login
message LoginResponse {
  bool success = 1;          // Indicates if login was successful
  string jwt_token = 2;      // JWT token for authenticated sessions
  string message = 3;        // Optional message
}

// Request to retrieve user profile
message UserProfileRequest {
  string user_id = 1;        // User ID whose profile we want to fetch
}

// User profile response
message UserProfileResponse {
  string user_id = 1;
  string username = 2;
  string full_name = 3;
  string email = 4;
  string phone = 5;
  string role = 6;
}

// Message for user requesting password reset
message RequestPasswordResetRequest {
  string username = 1;
}

message RequestPasswordResetResponse {
  bool success = 1;
  string message = 2;
}

// Message for admin resetting password
message AdminResetPasswordRequest {
  string username = 1;
  string new_password = 2; // Optional; if not set, server can generate a random password
}

message AdminResetPasswordResponse {
  bool success = 1;
  string message = 2;
}